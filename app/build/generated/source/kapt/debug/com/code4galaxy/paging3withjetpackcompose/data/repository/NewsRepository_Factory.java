// Generated by Dagger (https://dagger.dev).
package com.code4galaxy.paging3withjetpackcompose.data.repository;

import com.code4galaxy.paging3withjetpackcompose.data.NewsService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NewsRepository_Factory implements Factory<NewsRepository> {
  private final Provider<NewsService> newsServiceProvider;

  public NewsRepository_Factory(Provider<NewsService> newsServiceProvider) {
    this.newsServiceProvider = newsServiceProvider;
  }

  @Override
  public NewsRepository get() {
    return newInstance(newsServiceProvider.get());
  }

  public static NewsRepository_Factory create(Provider<NewsService> newsServiceProvider) {
    return new NewsRepository_Factory(newsServiceProvider);
  }

  public static NewsRepository newInstance(NewsService newsService) {
    return new NewsRepository(newsService);
  }
}
