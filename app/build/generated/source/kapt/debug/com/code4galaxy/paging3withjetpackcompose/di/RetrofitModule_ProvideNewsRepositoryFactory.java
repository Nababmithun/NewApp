// Generated by Dagger (https://dagger.dev).
package com.code4galaxy.paging3withjetpackcompose.di;

import com.code4galaxy.paging3withjetpackcompose.data.NewsService;
import com.code4galaxy.paging3withjetpackcompose.data.repository.NewsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RetrofitModule_ProvideNewsRepositoryFactory implements Factory<NewsRepository> {
  private final Provider<NewsService> newsApiServiceProvider;

  public RetrofitModule_ProvideNewsRepositoryFactory(Provider<NewsService> newsApiServiceProvider) {
    this.newsApiServiceProvider = newsApiServiceProvider;
  }

  @Override
  public NewsRepository get() {
    return provideNewsRepository(newsApiServiceProvider.get());
  }

  public static RetrofitModule_ProvideNewsRepositoryFactory create(
      Provider<NewsService> newsApiServiceProvider) {
    return new RetrofitModule_ProvideNewsRepositoryFactory(newsApiServiceProvider);
  }

  public static NewsRepository provideNewsRepository(NewsService newsApiService) {
    return Preconditions.checkNotNullFromProvides(RetrofitModule.INSTANCE.provideNewsRepository(newsApiService));
  }
}
